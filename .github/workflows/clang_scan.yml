# This is a basic workflow to help you get started with Actions

name: clang_scan

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
permissions:
  contents: read

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-24.04
    if: ${{ github.repository == 'intel/pcm' }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Harden Runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          egress-policy: audit

      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          submodules: recursive

      # Runs a set of commands using the runners shell
      - name: preparation
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq -y make clang clang-tools perl g++ cmake
      - name: cmake
        run: |
          rm -rf ${{ github.workspace }}/build
          scan-build cmake -B ${{ github.workspace }}/build
      - name: scan-build
        run: |
          cd ${{ github.workspace }}/build
          scan-build --exclude src/simdjson --status-bugs make -j
